class Solution {
public:
    int search(vector<int>& nums, int x) {
        int l = 0;
        int r = nums.size() - 1;
        int mid = (l + (r -l) / 2);
        int pos = -1;
        if (nums.size() > 0){
            if (x == nums[mid]) {
                pos = mid;
            } else {
                while (l < r) {
                    //cout << "l " << l << " mid " << mid << " r " << r << endl;
                    if (x > nums [r] && x < nums[l])
                        break;
                    if (nums[l] == x) {
                        pos = l;
                        break;
                    } else if (nums[r] == x) {
                        pos = r;
                        break;
                    } else if (nums[mid] == x) {
                        pos = mid;
                        break;
                    } else {
                        if (x > nums [l]) {
                            if (x > nums[mid] && nums[l] < nums[mid]) {
                                l = mid + 1;
                            } else {
                                r = mid - 1;
                            }
                        } else {
                            //cout << "debug"<<endl;
                            if (x > nums[mid] && x < nums[r])
                                l = mid + 1;
                            if (x < nums[mid] && x < nums[r]){
                                //cout << "debug 2" << endl;
                                if (nums[l] > nums[mid])
                                    r = mid - 1;
                                else if (nums[l] <= nums[mid])
                                    l = mid + 1;
                            }
                        }
                    }

                    mid = l + (r-l)/ 2;
                }
            }
        }
        return pos;
    }
};